{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\61468\\\\OneDrive\\\\Desktop\\\\gitHub\\\\aws-thought\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\61468\\\\OneDrive\\\\Desktop\\\\gitHub\\\\aws-thought\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"C:\\\\Users\\\\61468\\\\OneDrive\\\\Desktop\\\\gitHub\\\\aws-thought\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:\\\\Users\\\\61468\\\\OneDrive\\\\Desktop\\\\gitHub\\\\aws-thought\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\61468\\\\OneDrive\\\\Desktop\\\\gitHub\\\\aws-thought\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";var ThoughtForm=function ThoughtForm(){var _useState=useState({username:\"\",thought:\"\"}),_useState2=_slicedToArray(_useState,2),formState=_useState2[0],setFormState=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),characterCount=_useState4[0],setCharacterCount=_useState4[1];// update state based on form input changes\nvar handleChange=function handleChange(event){if(event.target.value.length<=280){setFormState(_objectSpread(_objectSpread({},formState),{},_defineProperty({},event.target.name,event.target.value)));setCharacterCount(event.target.value.length);}};// submit form\nvar handleFormSubmit=function handleFormSubmit(event){event.preventDefault();var postData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch('/api/users',{method:'POST',headers:{Accept:'application/json','Content-Type':'application/json'},body:JSON.stringify(formState)});case 2:res=_context.sent;_context.next=5;return res.json();case 5:data=_context.sent;console.log(data);case 7:case\"end\":return _context.stop();}}},_callee);}));return function postData(){return _ref.apply(this,arguments);};}();postData();// clear form value\nsetFormState({username:\"\",thought:\"\"});setCharacterCount(0);};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"p\",{className:\"m-0 \".concat(characterCount===280?\"text-error\":\"\")},\"Character Count: \",characterCount,\"/280\"),/*#__PURE__*/React.createElement(\"form\",{className:\"flex-row justify-center justify-space-between-md align-stretch\",onSubmit:handleFormSubmit},/*#__PURE__*/React.createElement(\"input\",{placeholder:\"Name\",name:\"username\",value:formState.username,className:\"form-input col-12 \",onChange:handleChange}),/*#__PURE__*/React.createElement(\"textarea\",{placeholder:\"Here's a new thought...\",name:\"thought\",value:formState.thought,className:\"form-input col-12 \",onChange:handleChange}),/*#__PURE__*/React.createElement(\"button\",{className:\"btn col-12 \",type:\"submit\"},\"Submit\")));};export default ThoughtForm;","map":{"version":3,"sources":["C:/Users/61468/OneDrive/Desktop/gitHub/aws-thought/client/src/components/ThoughtForm/index.js"],"names":["React","useState","ThoughtForm","username","thought","formState","setFormState","characterCount","setCharacterCount","handleChange","event","target","value","length","name","handleFormSubmit","preventDefault","postData","fetch","method","headers","Accept","body","JSON","stringify","res","json","data","console","log"],"mappings":"06BAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,cAAkCD,QAAQ,CAAC,CACzCE,QAAQ,CAAE,EAD+B,CAEzCC,OAAO,CAAE,EAFgC,CAAD,CAA1C,wCAAOC,SAAP,eAAkBC,YAAlB,eAIA,eAA4CL,QAAQ,CAAC,CAAD,CAApD,yCAAOM,cAAP,eAAuBC,iBAAvB,eAEA;AACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC9B,GAAIA,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,MAAnB,EAA6B,GAAjC,CAAsC,CACpCP,YAAY,gCAAMD,SAAN,wBAAkBK,KAAK,CAACC,MAAN,CAAaG,IAA/B,CAAsCJ,KAAK,CAACC,MAAN,CAAaC,KAAnD,GAAZ,CACAJ,iBAAiB,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,MAApB,CAAjB,CACD,CACF,CALD,CAOA;AACA,GAAME,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACL,KAAD,CAAW,CAClCA,KAAK,CAACM,cAAN,GACA,GAAMC,CAAAA,QAAQ,0FAAG,sKACGC,CAAAA,KAAK,CAAC,YAAD,CAAe,CACpCC,MAAM,CAAE,MAD4B,CAEpCC,OAAO,CAAE,CACPC,MAAM,CAAE,kBADD,CAEP,eAAgB,kBAFT,CAF2B,CAMpCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAenB,SAAf,CAN8B,CAAf,CADR,QACToB,GADS,qCASIA,CAAAA,GAAG,CAACC,IAAJ,EATJ,QASTC,IATS,eAUfC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAVe,sDAAH,kBAARV,CAAAA,QAAQ,0CAAd,CAYAA,QAAQ,GAER;AACAX,YAAY,CAAC,CAAEH,QAAQ,CAAE,EAAZ,CAAgBC,OAAO,CAAE,EAAzB,CAAD,CAAZ,CACAI,iBAAiB,CAAC,CAAD,CAAjB,CACD,CAnBD,CAqBA,mBACE,4CACE,yBAAG,SAAS,eAASD,cAAc,GAAK,GAAnB,CAAyB,YAAzB,CAAwC,EAAjD,CAAZ,sBACoBA,cADpB,QADF,cAIE,4BACE,SAAS,CAAC,gEADZ,CAEE,QAAQ,CAAEQ,gBAFZ,eAIE,6BACE,WAAW,CAAC,MADd,CAEE,IAAI,CAAC,UAFP,CAGE,KAAK,CAAEV,SAAS,CAACF,QAHnB,CAIE,SAAS,CAAC,oBAJZ,CAKE,QAAQ,CAAEM,YALZ,EAJF,cAWE,gCACE,WAAW,CAAC,yBADd,CAEE,IAAI,CAAC,SAFP,CAGE,KAAK,CAAEJ,SAAS,CAACD,OAHnB,CAIE,SAAS,CAAC,oBAJZ,CAKE,QAAQ,CAAEK,YALZ,EAXF,cAkBE,8BAAQ,SAAS,CAAC,aAAlB,CAAgC,IAAI,CAAC,QAArC,WAlBF,CAJF,CADF,CA6BD,CAlED,CAoEA,cAAeP,CAAAA,WAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst ThoughtForm = () => {\n  const [formState, setFormState] = useState({\n    username: \"\",\n    thought: \"\",\n  });\n  const [characterCount, setCharacterCount] = useState(0);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    if (event.target.value.length <= 280) {\n      setFormState({ ...formState, [event.target.name]: event.target.value });\n      setCharacterCount(event.target.value.length);\n    }\n  };\n\n  // submit form\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n    const postData = async () => {\n      const res = await fetch('/api/users', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formState)\n      })\n      const data = await res.json();\n      console.log(data);\n    }\n    postData();\n      \n    // clear form value\n    setFormState({ username: \"\", thought: \"\" });\n    setCharacterCount(0);\n  };\n\n  return (\n    <div>\n      <p className={`m-0 ${characterCount === 280 ? \"text-error\" : \"\"}`}>\n        Character Count: {characterCount}/280\n      </p>\n      <form\n        className=\"flex-row justify-center justify-space-between-md align-stretch\"\n        onSubmit={handleFormSubmit}\n      >\n        <input\n          placeholder=\"Name\"\n          name=\"username\"\n          value={formState.username}\n          className=\"form-input col-12 \"\n          onChange={handleChange}\n        ></input>\n        <textarea\n          placeholder=\"Here's a new thought...\"\n          name=\"thought\"\n          value={formState.thought}\n          className=\"form-input col-12 \"\n          onChange={handleChange}\n        ></textarea>\n        <button className=\"btn col-12 \" type=\"submit\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ThoughtForm;\n"]},"metadata":{},"sourceType":"module"}